// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// lininterp
NumericVector lininterp(const NumericVector& basex, const NumericVector& basey, const NumericVector& xs);
RcppExport SEXP _rquantnum_lininterp(SEXP basexSEXP, SEXP baseySEXP, SEXP xsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type basex(basexSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type basey(baseySEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type xs(xsSEXP);
    rcpp_result_gen = Rcpp::wrap(lininterp(basex, basey, xs));
    return rcpp_result_gen;
END_RCPP
}
// polyinterp
NumericVector polyinterp(const NumericVector& basex, const NumericVector& basey, int m, const NumericVector& xs);
RcppExport SEXP _rquantnum_polyinterp(SEXP basexSEXP, SEXP baseySEXP, SEXP mSEXP, SEXP xsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type basex(basexSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type basey(baseySEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type xs(xsSEXP);
    rcpp_result_gen = Rcpp::wrap(polyinterp(basex, basey, m, xs));
    return rcpp_result_gen;
END_RCPP
}
// splineinterp
NumericVector splineinterp(const NumericVector& basex, const NumericVector& basey, const NumericVector& xs);
RcppExport SEXP _rquantnum_splineinterp(SEXP basexSEXP, SEXP baseySEXP, SEXP xsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericVector& >::type basex(basexSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type basey(baseySEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type xs(xsSEXP);
    rcpp_result_gen = Rcpp::wrap(splineinterp(basex, basey, xs));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rquantnum_lininterp", (DL_FUNC) &_rquantnum_lininterp, 3},
    {"_rquantnum_polyinterp", (DL_FUNC) &_rquantnum_polyinterp, 4},
    {"_rquantnum_splineinterp", (DL_FUNC) &_rquantnum_splineinterp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_rquantnum(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
